% -*- mode: noweb; noweb-default-code-mode: R-mode; -*-
%\VignetteIndexEntry{Processing Ecological Data in R With the mefa Package}


\documentclass[nojss]{jss}
\usepackage{thumbpdf}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% declarations for jss.cls %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\author{P\'eter S\'olymos\\University of Alberta}
\title{Processing Ecological Data in \proglang{R} With the \pkg{mefa} Package}

\Plainauthor{P\'eter S\'olymos}
\Plaintitle{Processing Ecological Data in R With the mefa Package}
\Shorttitle{Processing Ecological Data}

\Abstract{
The \pkg{mefa} is an \proglang{R} package for multivariate count data handling in ecology and biogeography. It provides object classes to represent count data coded by sample, taxon and segment (i.e.~subpopulations, repeated measures) names. Supports easy processing of the count data along with relational data tables for samples and taxa. An object of class 'mefa' is a project specific compendium of the dataset and can be easily used in further analyses. Methods are provided for extraction, aggregation, conversion, plotting, summary and reporting of 'mefa' objects. Reports can be generated in plain text or \LaTeX~format.
}
\Keywords{biodiversity, biogeography, data manipulation, ecology, multivariate methods, \proglang{R}}
\Plainkeywords{biodiversity, biogeography, data manipulation, ecology, multivariate methods, R}

%% publication information
%% NOTE: Typically, this can be left commented and will be filled out by the technical editor
%% \Volume{13}
%% \Issue{9}
%% \Month{September}
%% \Year{2008}
%% \Submitdate{2008-09-29}
%% \Acceptdate{2008-09-29}

\Address{
  P\'eter S\'olymos\\
  Department of Mathematical and Statistical Sciences\\
  University of Alberta\\
  Edmonton, Alberta, T6G 2G1, Canada\\
  E-mail: \email{solymos@ualberta.ca}\\
  and\\
  Department of Ecology\\
  Faculty of Veterinary Science, Szent Istv\'an University\\
  Rottenbiller Str. 50, 1077 Budapest, Hungary
}

%% need no \usepackage{Sweave.sty}

%% end of declarations %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\begin{document}


<<echo=FALSE, results=hide>>=
options("prompt" = "R> ", "continue" = "+ ", "useFancyQuotes" = FALSE)
@


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section[Introduction]{Introduction}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


Fortunately, many packages are available for the analysis of ecological data in \proglang{R} (\cite{rcore-manual}), e.g.~the \pkg{ade4} (\cite{ade4-jss-07}), \pkg{labdsv} (\cite{labdsv-manual}) and \pkg{vegan} (\cite{vegan-manual}) packages among other more standard statistical packages e.g.~\pkg{MASS} (\cite{mass-book-02}), \pkg{stats} (\cite{rcore-manual}). These, however, often require the multivariate data in the form of a matrix or data frame.

Extensive ecological data sets (with observations of multiple taxa at multiple locations) are not stored in cross tabulated format because most biodiversity data sets are sparse with matrix fill often lower than 30 percent. The conversion between data formats of biodiversity databases and ecological packages might require substantial work. Of course there are many possibilities for general data manupulation in \proglang{R} (\cite{spector-manip-08}). The \pkg{Hmisc} (\cite{hmisc-manual}), \pkg{reshape} (\cite{reshape-manual}) and \pkg{simba} (\cite{simba-manual}) packages contain functions for converting ecological data in database formats into crosstabulated data matrices, and vica versa.

When the problems are more complex (e.g.~a survey spanning across multiple spatial or temporal scales), results are stored in several related data tables. Most multivariate methods require a matrix, whereas response modelling usually require data frame as input. The simultaneous manipulation and checking of the community data matrix and related data frames can be time consuming with the standard tools.

The aim of the \pkg{mefa} \proglang{R} package is to bridge the gap between the data and the analysis, and to reduce the time spent with data preprocessing. It provides object classes and methods for convenient manipulation of related data tables and can be used for generating reports in plain text or \LaTeX~format. Compared to previous versions (< 2.0, \cite{mefa-comecol-08}), the package has been extensively rewritten to enhance efficiency and speed, and with a focus on methods. Stable version of the package is available via the Comprehensive \proglang{R} Archive Network (CRAN, \url{http://cran.r-project.org}), develompmental version is available at the R-Forge (\url{http://r-forge.r-project.org/}).

In this paper I outline the motivation and the general idea behind the package, and I describe the structure of the object classes. Then a real data set is used to demonstrate the methods in the package and the use of objects in further data analysis.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section[Motivation]{Motivation}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


Suppose that we have the following data set:
<<>>=
dat <- data.frame(
    samples = paste("Sample", c(1,1,3,3,4,2), sep="."),
    taxa = c(paste("Species", c(5,5,5,4,6), sep="."), "zero.pseudo"),
    counts = c(1,2,10,3,4,0),
    segments = letters[c(6,13,6,13,6,6)])
dat
@

This is a tipical format for biodiversity datasets, where the \code{samples} column represents the observational units. In planned ecological field experiments these units are expected to be comparable in terms of sampling effort. While when data came from unplanned field observations, samples are often not comparable but refer to an observation, or set of individuals collected from a given location, by a given person in a given time.

The \code{taxa} column refers to the taxonomic identity of the individuals found in a given sample. The taxonomic resolution might vary due to expert knowledge and development stage of the individuals. When a sample did not contain individuals, it is convenient to refer to this situation by a pseudo-species (here, it is named as \code{"zero.pseudo"}) indicating that 0 individuals were found in \code{Sample.2}. 
%% This is straightforward in planned experiments, because the absence of the given taxa from a sample might be informative if sample covariates are also measured. In the 
%% unplanned case, such empty samples rarely occur, because a non-observation of a taxa does not imply its absence. In a planned experiment, when sampling circumstances and 
%% sampling effort are known, the probability of encountering a false absence can be estimated. But without such information, it is better to rely on presence only data.

The \code{counts} column contain the outcome of the field experiment, the number of individuals of a given taxa that were found in a given sample.

The \code{segments} column is used to distinguish subpopulations within individuals of the same species (nested into samples and species). Common examples are when distinguishing between males and females, different life stages or age classes. But it can also be used to identify subsets of the data, e.g.~in case of a repeated measures experiment, when samples are nested within subsequent sampling period.

This format is ideal for the storage of the data but not adequate for data analysis. Prior to analysis, we have to crosstabulate the data to get a matrix filled with count values and with rows as samples and columns as taxa. Besides the functions \code{table} (in package \pkg{base}, for factors) and \code{xtabs} (in package \pkg{stats}, with formula interface, \cite{rcore-manual}), there are some other functions in \proglang{R} to do this. For two-way crosstabulation of such data, there is the function \code{reshape} in the \pkg{reshape} package (\cite{reshape-manual}), and the \code{mama} function in the \pkg{simba} package (\cite{simba-manual}) based on the \code{reshape} function.

Complications may arise, however, when we are dealing with three-way crosstabulation of the data and complex data structures, like the results of a hierarchical sampling design. We have to aggregate the samples into higher level units or the taxa into taxonomic or functional groups. And we might want to extract a subset of the crosstabulated data along with subsetted tables for samples and taxa at the same time. The way to do it with the \pkg{mefa} is shown in the next sections.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section[Object classes]{Object Classes}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


The structure of the above data set with the four column is basically the prototype of an object of class 'stcs'. This is the primary format for database style data sets in the \pkg{mefa} package. The four letter acronym comes from the first letters of the column names. To convert our example into an 'stcs' object we do:

<<results=hide>>=
library(mefa)
@

<<>>=
x <- stcs(dat)
x
str(x)
@

The objects inherits from the data frame class, thus methods available for data frames applies for 'stcs' objects as well. The column names are changed into shortened ones, and there are three additional attributes. The \code{expand} attribute refers to the count column. If the counts are 1s, and each rows represent one individual, than \code{expand} attribute is \code{TRUE}. We can achieve this by the \code{expand} argument:

<<>>=
stcs(dat, expand = TRUE)
@

As an effect, the data frame is expanded and count column contain 1 and 0 values. This expansion can be done with any data frame by the \code{inflate} function of the package. The \code{zero.count} attribute refers to the presence or absence of empty samples in the data set. If empty samples are present, taxa and segment indices of the corresponding rows are set to the value stored in the \code{zero.pseudo} attribute. This can be set by the \code{zero.pseudo} argument in the function. Count values of this pseudo species should be 0, the segment value is indifferent. Empty samples can be dropped by the \code{drop.zero = TRUE} argument (some multivariate methods, i.e.~dissimilarity or diversity indices, does not allow empty rows to be present):

<<>>=
stcs(dat, drop.zero = TRUE)
@

The number of columns in the input data frame may vary from two to four. If two columns are provided, it is assumed that the first column contains sample, while the second taxa names. If three columns are provided, the first two is treated as sample and taxa names, while the third is treated as count if numeric, and segment if character or factor. If four columns are provided, those are assumed to be in the samples, taxa, counts, segments order.

To crosstabulate the data of a 'stcs' object, use:

<<>>=
m <- mefa(x)
m
m$xtab
@

The \code{mefa} function returns and object of class 'mefa'. The term 'mefa' is an acronym for \emph{metafaunistics}, where the \emph{faunistics} refers to the study of the fauna of some territory or area, while the \emph{meta} part refers to the procedures (data processing and analysis) beyond the data collection part of the scientific endeavour.

The print method for the 'mefa' objects returns basic informations on the dimensions of the data. The \code{x$xtab} list element contains the cross tabulated count data. The pseudo species has been removed, thus the last row is empty. Row and column ordering follows the original internal coding of factors in the 'stcs' object. The \code{x$segm} contains the matrices for each segments, with dimensions same as for \code{x$xtab}:


<<echo=FALSE, results=hide>>=
options(SweaveHooks = list(fig = function() par(mfrow = c(1, 1))))
@

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section[Conclusions]{Conclusions}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


The \pkg{mefa} package provides a convenient tool for ecologists and biogeographers working on biodiversity data sets in \proglang{R}. The object classes ('stcs' and 'mefa') and S3 methods provide a coherent framework for data preprocessing of structured data sets. Based on 'mefa' objects, reports can be generated in plain text or \LaTeX~format. It is presented how the objects can be directly used in further analyses.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section[Acknowledgements]{Acknowledgements}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


Initial development of the \pkg{mefa} package was motivated by complex spatial sampling designs for landscape scale invertebrate surveys, especially in the ''Dolina 2007'' experiment. I would like to thank to Zita Kemencei, Ferenc Vilisics, Elisabeth Hornung, Roland Farkas and Zolt\'an Feh\'er for discussions and feedback, and providing their data to improve the package. During the preparation of this manuscript, I was supported by a postdoctoral fellowship from the NSERC and the Alberta Biodiversity Monitoring Institute (Edmonton, Alberta, Canada).


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\bibliography{mefa-jss}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\begin{table}[p]
\begin{center}
\begin{tabular}[tb]{llp{10cm}}
\hline
Class & Method & Description \\ 
\hline
\texttt{stcs} & \texttt{is.stcs}   & evaluates if an object is of class 'stcs'. \\ 
            & \texttt{as.stcs}   & equivalent to the function \texttt{stcs}. \\ 
\texttt{mefa} & \texttt{is.mefa}   & evaluates if an object is of class 'mefa'. \\ 
            & \texttt{as.mefa}   & equivalent to the function \texttt{mefa}. \\ 
            & \texttt{print}     & print basic characteristics of the object. \\ 
            & \texttt{summary}   & print basic summaries on the count data. \\ 
            & \texttt{plot}      & graphical display of basic summaries of the count data based on the main data matrix. \\ 
            & \texttt{boxplot}   & graphical display of basic summaries of the count data based on data matrices for segments. \\ 
            & \texttt{image}     & graphical display of count values in the main data matrix or data matrix for a segment. \\ 
            & \texttt{aggregate} & aggregate (sum) the values in the matrices (main data and segments). \\ 
            & \texttt{[}         & extract an object (count data matrices and relational data frames) based on indexing for rows (samples) columns (taxa) and segments.\\ 
            & \texttt{melt}      & convert an object of class 'mefa' into an object of class 'stcs'. \\ 
            & \texttt{report}    & writes data from an object of class 'mefa' into a file. \\ 
            & \texttt{dim}       & return dimension of the object. \\ 
            & \texttt{dimnames}  & return names for rows (samples) columns (taxa) and segments. \\
\hline
\end{tabular}
\end{center}
  \caption{Description of methods provided for the object classes.\label{methtab}}
\end{table}


\end{document}
